@model WebApplication.Presentation.Models.ShoppingListDetailsViewModel
@{
    var shoppingListId = Model.ShoppingListId;
}
<a href="/ShoppingList/Index" style="padding:5px 10px; font-size:16px; text-decoration:none; background-color:#f0f0f0; border:1px solid #ccc; border-radius:5px; color:black;">
    ← Terug
</a>

<table>
    <h2>thema: @Model.Theme</h2>

    <div style="margin-bottom: 15px;">
        <a asp-controller="ProductList" asp-action="AddToList" asp-route-shoppingListId="@Model.ShoppingListId" style="margin-right:10px;">Product toevoegen</a>
    </div>

    <thead>
        <tr>
            <th>Gevonden?</th>
            <th>Naam</th>
            <th>Winkel</th>
            <th>Categorie</th>
            <th>Prijs</th>
            <th>Hoeveelheid</th>
            <th>Acties</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr id="row_@item.Product.Id">
                <td>
                    <input type="checkbox" class="found-checkbox" id="found_@item.Product.Id" />
                </td>
                <td>@item.Product.Name</td>
                <td>@item.Product.Store</td>
                <td>@item.Product.Category</td>
                <td>@item.Product.Price.ToString("C")</td>
                <td>
                    <form asp-controller="ProductList" asp-action="UpdateQuantity" method="post" style="display:inline;">
                        <input type="hidden" name="shoppingListId" value="@shoppingListId" />
                        <input type="hidden" name="productId" value="@item.Product.Id" />
                        <input type="hidden" name="delta" value="-1" />
                        <button type="submit" @(item.Quantity <= 1 ? "disabled" : "")>-</button>
                    </form>

                    @item.Quantity

                    <form asp-controller="ProductList" asp-action="UpdateQuantity" method="post" style="display:inline;">
                        <input type="hidden" name="shoppingListId" value="@shoppingListId" />
                        <input type="hidden" name="productId" value="@item.Product.Id" />
                        <input type="hidden" name="delta" value="1" />
                        <button type="submit">+</button>
                    </form>
                </td>
                <td>
                    <form asp-controller="ProductList" asp-action="RemoveFromList" method="post" style="display:inline;">
                        <input type="hidden" name="shoppingListId" value="@shoppingListId" />
                        <input type="hidden" name="productId" value="@item.Product.Id" />
                        <button type="submit">Verwijderen</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3"></td>
            <td><strong>Totaal:</strong></td>
            <td colspan="2">@Model.TotalPrice.ToString("C")</td>
        </tr>
    </tfoot>
</table>

@section Styles {
    <style>
        .found-row {
            background-color: #d4edda; /* lichtgroen */
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.found-checkbox').forEach(cb => {
                const productId = cb.id.replace('found_', '');
                const row = document.getElementById('row_' + productId);

                // Check lokale opslag voor status
                const savedStatus = localStorage.getItem('found_' + productId);
                if (savedStatus === 'true') {
                    cb.checked = true;
                    if (row) {
                        row.classList.add('found-row');
                    }
                }

                // Opslaan bij wijzigen + achtergrond aanpassen
                cb.addEventListener('change', () => {
                    localStorage.setItem('found_' + productId, cb.checked);
                    if (cb.checked) {
                        row.classList.add('found-row');
                    } else {
                        row.classList.remove('found-row');
                    }
                });
            });
                // Verwijderen van localStorage item bij verwijderactie
            document.querySelectorAll('form[action$="RemoveFromList"]').forEach(form => {
                form.addEventListener('submit', function () {
                    const productId = form.querySelector('input[name="productId"]').value;
                    localStorage.removeItem('found_' + productId);
                });
            });
        });
    </script>
}
